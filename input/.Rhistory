layout(matrix(c(1,1,2)))
par(mar=c(2,2,2,2))
plot(c(100, 345), c(300, 450), type = "n", xlab="", ylab="", xaxt='n', yaxt='n')
title('CONFUSION MATRIX', cex.main=2)
# create the matrix
rect(150, 430, 240, 370, col='#3F97D0')
text(195, 435, '0', cex=1.2)
rect(250, 430, 340, 370, col='#F7AD50')
text(295, 435, '1', cex=1.2)
text(125, 370, 'Predicted', cex=1.3, srt=90, font=2)
text(245, 450, 'True value', cex=1.3, font=2)
rect(150, 305, 240, 365, col='#F7AD50')
rect(250, 305, 340, 365, col='#3F97D0')
text(140, 400, '0', cex=1.2, srt=90)
text(140, 335, '1', cex=1.2, srt=90)
# add in the cm results
res <- as.numeric(cm$table)
text(195, 400, res[1], cex=1.6, font=2, col='white')
text(195, 335, res[2], cex=1.6, font=2, col='white')
text(295, 400, res[3], cex=1.6, font=2, col='white')
text(295, 335, res[4], cex=1.6, font=2, col='white')
# add in the specifics
plot(c(100, 0), c(100, 0), type = "n", xlab="", ylab="", main = "DETAILS", xaxt='n', yaxt='n')
text(10, 85, names(cm$byClass[1]), cex=1.2, font=2)
text(10, 70, round(as.numeric(cm$byClass[1]), 3), cex=1.2)
text(30, 85, names(cm$byClass[2]), cex=1.2, font=2)
text(30, 70, round(as.numeric(cm$byClass[2]), 3), cex=1.2)
text(50, 85, names(cm$byClass[5]), cex=1.2, font=2)
text(50, 70, round(as.numeric(cm$byClass[5]), 3), cex=1.2)
text(70, 85, names(cm$byClass[6]), cex=1.2, font=2)
text(70, 70, round(as.numeric(cm$byClass[6]), 3), cex=1.2)
text(90, 85, names(cm$byClass[7]), cex=1.2, font=2)
text(90, 70, round(as.numeric(cm$byClass[7]), 3), cex=1.2)
# add in the accuracy information
text(30, 35, names(cm$overall[1]), cex=1.5, font=2)
text(30, 20, round(as.numeric(cm$overall[1]), 3), cex=1.4)
text(70, 35, names(cm$overall[2]), cex=1.5, font=2)
text(70, 20, round(as.numeric(cm$overall[2]), 3), cex=1.4)
}
prediction = predict(optimal, test)
predict(optimal, test, type="class")
predicted_val = c()
for (i in 1:test_size){
if(max(prediction[i,1], prediction[i,2]) == prediction[i,1]){
predicted_val[i] = 0
}else{
predicted_val[i] = 1
}
}
cf <- confusionMatrix(factor(predicted_val), factor(test$Adjusted), positive="1", dnn = c("Prediction", "True values"))
draw_confusion_matrix(cf)
prediction_df = as.data.frame(predict(optimal,newdata = test,type = "prob"))
prediction = prediction(probPredict$`1`, test$Adjusted)
prediction_df = as.data.frame(predict(optimal,newdata = test,type = "prob"))
prediction = prediction(prediction_df$`1`, test$Adjusted)
roc = performance(prediction ,measure="tpr",x.measure="fpr")
plot(roc, main="ROC curve")
abline(0,1,col="blue")
auc = performance(prediction,"auc")
auc = as.numeric(auc@y.values)
kable(data.frame('AUC value'=auc))
audit_mids <- mice(audit, m = 5,           # nbr of multiple imputation
where=is.na(audit),
maxit = 2,
method = "cart"  # univariate imputation for classification and regression trees
)
audit_imp <- complete(audit_mids,
1,
include=F
)
rf_train = audit_imp[1:train_size,2:13]
rf_test = audit_imp[train_size:test_size,2:13]
rf_test[c(-12,-11)]
library("FactoMineR")
library("knitr")
library("rpart")
library("randomForest")
library("caret")
library("mice")
library("magrittr")
library("arules")
library("lattice")
library("ParamHelpers")
library("ROCR")
audit_mids <- mice(audit, m = 5,           # nbr of multiple imputation
where=is.na(audit),
maxit = 2,
method = "cart"  # univariate imputation for classification and regression trees
)
audit <- read.csv("audit.csv",header=T,sep=';')
audit$Income <- discretize(method="cluster", as.numeric(audit$Income), breaks=4)
audit$Age <- discretize(method="cluster", audit$Age, breaks=4)
audit$Deductions <- discretize(method="cluster", as.numeric(audit$Deductions), breaks=4)
audit$Hours <- discretize(method="cluster", audit$Hours, breaks=4)
audit$Adjusted <- as.factor(audit$Adjusted)
audit_mids <- mice(audit, m = 5,           # nbr of multiple imputation
where=is.na(audit),
maxit = 2,
method = "cart"  # univariate imputation for classification and regression trees
)
audit_mids <- mice(audit, m = 5,           # nbr of multiple imputation
where=is.na(audit),
maxit = 2,
method = "cart"  # univariate imputation for classification and regression trees
)
audit_imp <- complete(audit_mids, 1, include=F)
rf_train = audit_imp[1:train_size,2:13]
audit_imp <- complete(audit_mids, 1, include=F)
audit_imp
rf_train = audit_imp[1:train_size,2:13]
num_rows = dim(audit)[1]
train_size = round(num_rows*2/3)
test_size = round(2000*1/3)
train = audit[1:train_size, 2:13]
train = subset(train, select= -Adjustment)
test = audit[train_size:test_size, 2:13]
test = subset(test, select= -Adjustment)
rf_train = audit_imp[1:train_size,2:13]
rf_test = audit_imp[train_size:test_size,2:13]
rf_test[c(-12,-11)]
rf_train[12]
random_forest <- randomForest(formula = Adjusted ~.,
data=rf_train[-11],
mtry=3,      # three predictor-vars selected randomly at each split
xtest=rf_test[c(-12,-11)],
ytest=as.factor(rf_test$Adjusted),
#ytest=as.factor(audit_imp$Adjusted[testRows]),
importance=T,
ntree=500,   # acceptably large value to ensure each sample row is predicted
# at least 2-digit nbr of times on average
nodesize = 50,
maxnodes = 40,
norm.votes=T )
df_rf_predictions <- as.factor(predict(classAudit_train, newdata=rf_test[c(-12,-11)], type="class"))
df_rf_predictions <- as.factor(predict(random_forest, newdata=rf_test[c(-12,-11)], type="class"))
df_rf_predictions <- as.factor(predict(random_forest, newdata=rf_test[c(-12,-11)], type="class"))
classAudit_train <- randomForest(formula = Adjusted ~.,
data=rf_train[-11] )
rf <- randomForest(formula = Adjusted ~., data=rf_train[-11] )
df_rf_predictions <- as.factor(predict(rf, newdata=rf_test[c(-12,-11)], type="class"))
df_rf_predictions
cf <- confusionMatrix(factor(df_rf_predictions), factor(rf_test$Adjusted), positive="1", dnn = c("Prediction", "True values"))
draw_confusion_matrix(cf)
draw_confusion_matrix <- function(cm) {
layout(matrix(c(1,1,2)))
par(mar=c(2,2,2,2))
plot(c(100, 345), c(300, 450), type = "n", xlab="", ylab="", xaxt='n', yaxt='n')
title('CONFUSION MATRIX', cex.main=2)
# create the matrix
rect(150, 430, 240, 370, col='#3F97D0')
text(195, 435, '0', cex=1.2)
rect(250, 430, 340, 370, col='#F7AD50')
text(295, 435, '1', cex=1.2)
text(125, 370, 'Predicted', cex=1.3, srt=90, font=2)
text(245, 450, 'True value', cex=1.3, font=2)
rect(150, 305, 240, 365, col='#F7AD50')
rect(250, 305, 340, 365, col='#3F97D0')
text(140, 400, '0', cex=1.2, srt=90)
text(140, 335, '1', cex=1.2, srt=90)
# add in the cm results
res <- as.numeric(cm$table)
text(195, 400, res[1], cex=1.6, font=2, col='white')
text(195, 335, res[2], cex=1.6, font=2, col='white')
text(295, 400, res[3], cex=1.6, font=2, col='white')
text(295, 335, res[4], cex=1.6, font=2, col='white')
# add in the specifics
plot(c(100, 0), c(100, 0), type = "n", xlab="", ylab="", main = "DETAILS", xaxt='n', yaxt='n')
text(10, 85, names(cm$byClass[1]), cex=1.2, font=2)
text(10, 70, round(as.numeric(cm$byClass[1]), 3), cex=1.2)
text(30, 85, names(cm$byClass[2]), cex=1.2, font=2)
text(30, 70, round(as.numeric(cm$byClass[2]), 3), cex=1.2)
text(50, 85, names(cm$byClass[5]), cex=1.2, font=2)
text(50, 70, round(as.numeric(cm$byClass[5]), 3), cex=1.2)
text(70, 85, names(cm$byClass[6]), cex=1.2, font=2)
text(70, 70, round(as.numeric(cm$byClass[6]), 3), cex=1.2)
text(90, 85, names(cm$byClass[7]), cex=1.2, font=2)
text(90, 70, round(as.numeric(cm$byClass[7]), 3), cex=1.2)
# add in the accuracy information
text(30, 35, names(cm$overall[1]), cex=1.5, font=2)
text(30, 20, round(as.numeric(cm$overall[1]), 3), cex=1.4)
text(70, 35, names(cm$overall[2]), cex=1.5, font=2)
text(70, 20, round(as.numeric(cm$overall[2]), 3), cex=1.4)
}
draw_confusion_matrix(cf)
draw_confusion_matrix(cf)
draw_confusion_matrix(cf)
rf_prediction = prediction(df_rf_predictions$`1`, rf_test$Adjusted)
rf_prediction = prediction(df_rf_predictions$`1`, rf_test$Adjusted)
rf_prediction = prediction(df_rf_predictions, rf_test$Adjusted)
roc = performance(rf_prediction ,measure="tpr",x.measure="fpr")
df_rf_predictions
roc = performance(df_rf_predictions ,measure="tpr",x.measure="fpr")
rf <- randomForest(formula = Adjusted ~., data=rf_train[-11] )
df_rf_predictions <- as.factor(predict(rf, newdata=rf_test[c(-12,-11)], type="class"))
cf <- confusionMatrix(factor(df_rf_predictions), factor(rf_test$Adjusted), positive="1", dnn = c("Prediction", "True values"))
draw_confusion_matrix(cf)
install.packages("corrplot")
install.packages("corrplot")
library("corrplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
knitr::opts_chunk$set(echo = TRUE)
dir <- '/Users/JaviFerrando/Desktop/NCAA Data/input/'
# Data Section 1
teams <- fread(paste(dir,'Teams.csv',sep=''))
setwd("~/Dropbox/MASTER/1rANY/Q2/ML/Project/ML-Project")
dir <- 'input/'
# Data Section 1
teams <- fread(paste(dir,'Teams.csv',sep=''))
dir <- 'input'
# Data Section 1
teams <- fread(paste(dir,'Teams.csv',sep=''))
library(data.table)
library(dplyr)
library(magrittr)
library(ggplot2)
library(gridExtra)
library(ggExtra)
library(corrplot)
theme_set(theme_bw())
dir <- 'input'
# Data Section 1
teams <- fread(paste(dir,'Teams.csv',sep=''))
setwd("~/Dropbox/MASTER/1rANY/Q2/ML/Project/ML-Project/input")
dir <- ''
# Data Section 1
teams <- fread(paste(dir,'Teams.csv',sep=''))
getwd()
# Data Section 1
teams <- fread('input/Teams.csv',sep='')
paste(dir, 'Teams.csv')
paste(dir,'Teams.csv')
paste(dir,'Teams.csv')
paste('input/','Teams.csv')
dir = 'input/'
paste(dir,'Teams.csv')
paste(dir,'Teams.csv')
dir <- 'input/'
paste(dir,'Teams.csv')
seasons <- fread(paste(dir,'Seasons.csv',sep=''))
seasons <- fread(paste(dir,'Seasons.csv',sep=''))
seeds <- fread(paste(dir,'NCAATourneySeeds.csv',sep=''))
seas_results <- fread(paste(dir,'RegularSeasonCompactResults.csv',sep=''))
tour_results <- fread(paste(dir,'NCAATourneyCompactResults.csv',sep=''))
seas_detail <- fread(paste(dir,'RegularSeasonDetailedResults.csv',sep=''))
tour_detail <- fread(paste(dir,'NCAATourneyDetailedResults.csv',sep=''))
conferences <- fread(paste(dir,'Conferences.csv',sep=''))
team_conferences <- fread(paste(dir,'TeamConferences.csv',sep=''))
coaches <- fread(paste(dir,'TeamCoaches.csv',sep=''))
tour_enrich <- fread(paste(dir,'NCAATourneyDetailedResultsEnriched.csv',sep=''))
seas_enrich <- fread(paste(dir,'NCAASeasonDetailedResultsEnrichedv2.csv',sep=''))
tour_enrich <- fread(paste(dir,'NCAATourneyDetailedResultsEnriched.csv',sep=''))
seas_enrich <- fread(paste(dir,'NCAASeasonDetailedResultsEnrichedv2.csv',sep=''))
get_wd()
tour_enrich <- fread(paste(dir,'NCAATourneyDetailedResultsEnriched.csv',sep=''))
# Data Section 1
teams <- fread('input/Teams.csv',sep='')
setkey(teams, TeamID)
setkey(teams, TeamID)
setkey(seeds, TeamID)
setkey(teams, TeamID)
#setkey(teams, TeamID)
setkey(seeds, TeamID)
g1 <-
teams[seeds][, one_seed := as.numeric(substr(Seed, 2, 3)) == 1][, sum(one_seed), by = TeamName][order(V1, decreasing = T)][1:15,] %>%
ggplot(aes(x = reorder(TeamName, V1), y = V1)) +
geom_bar(stat = 'identity', fill = 'darkblue') +
labs(x = '', y = 'No 1 seeds', title = 'No. 1 Seeds since 1985') +
coord_flip()
win_stats <- seas_enrich[, .(
Season,
TeamID = WTeamID,
Result = rep('W', .N),
FGM = WFGM,
FGA = WFGA,
FGP = WFGM / WFGA,
FGP2 = (WFGM - WFGM3) / (WFGA - WFGA3),
FGM3 = WFGM3,
FGA3 = WFGA3,
FGP3 = WFGM3 / WFGA3,
FTM = WFTM,
FTA = WFTA,
FTP = WFTM / WFTA,
OR = WOR,
DR = WDR,
AST = WAst,
TO = WTO,
STL = WStl,
BLK = WBlk,
PF = WPF,
PIE = WPIE,
ORP = WOR / (WOR + LDR),
DRP = WDR / (WDR + LOR),
eFG = WeFGP,
NetRTG = WNetRtg,
POS = 0.96 * (WFGA + WTO + 0.44 * WFTA - WOR)
)]
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(dplyr)
library(magrittr)
library(ggplot2)
library(gridExtra)
library(ggExtra)
library(corrplot)
theme_set(theme_bw())
dir <- 'input/'
teams <- fread('input/Teams.csv',sep='')
seasons <- fread(paste(dir,'Seasons.csv',sep=''))
seeds <- fread(paste(dir,'NCAATourneySeeds.csv',sep=''))
seas_results <- fread(paste(dir,'RegularSeasonCompactResults.csv',sep=''))
tour_results <- fread(paste(dir,'NCAATourneyCompactResults.csv',sep=''))
seas_detail <- fread(paste(dir,'RegularSeasonDetailedResults.csv',sep=''))
tour_detail <- fread(paste(dir,'NCAATourneyDetailedResults.csv',sep=''))
conferences <- fread(paste(dir,'Conferences.csv',sep=''))
team_conferences <- fread(paste(dir,'TeamConferences.csv',sep=''))
coaches <- fread(paste(dir,'TeamCoaches.csv',sep=''))
tour_enrich <- fread(paste(dir,'NCAATourneyDetailedResultsEnriched.csv',sep=''))
seas_enrich <- fread(paste(dir,'NCAASeasonDetailedResultsEnrichedv2.csv',sep=''))
setkey(teams, TeamID)
library(data.table)
setkey(teams, TeamID)
View(teams)
teams <- fread('input/Teams.csv',sep=',')
seasons <- fread(paste(dir,'Seasons.csv',sep=','))
dir <- 'input/'
teams <- fread('input/Teams.csv',sep=',')
seasons <- fread(paste(dir,'Seasons.csv',sep=','))
teams <- fread('input/Teams.csv',sep=',')
seasons <- fread('input/Seasons.csv',sep=',')
seeds <- fread('input/NCAATourneySeeds.csv',sep=',')
seas_results <- fread('input/RegularSeasonCompactResults.csv',sep=',')
tour_results <- fread('input/NCAATourneyCompactResults.csv',sep=',')
seas_detail <- fread('input/RegularSeasonDetailedResults.csv',sep=',')
tour_detail <- fread('input/NCAATourneyDetailedResults.csv',sep=',')
conferences <- fread('input/Conferences.csv',sep=',')
team_conferences <- fread('input/TeamConferences.csv',sep=',')
coaches <- fread('input/TeamCoaches.csv',sep=',')
tour_enrich <- fread('input/NCAATourneyDetailedResultsEnriched.csv',sep=',')
seas_enrich <- fread('input/NCAASeasonDetailedResultsEnrichedv2.csv',sep=',')
#setkey(teams, TeamID)
setkey(seeds, TeamID)
g1 <-
teams[seeds][, one_seed := as.numeric(substr(Seed, 2, 3)) == 1][, sum(one_seed), by = TeamName][order(V1, decreasing = T)][1:15,] %>%
ggplot(aes(x = reorder(TeamName, V1), y = V1)) +
geom_bar(stat = 'identity', fill = 'darkblue') +
labs(x = '', y = 'No 1 seeds', title = 'No. 1 Seeds since 1985') +
coord_flip()
View(rf_train)
View(rf_test)
View(audit)
library(data.table)
library(dplyr)
library(magrittr)
library(ggplot2)
library(gridExtra)
library(ggExtra)
library(corrplot)
theme_set(theme_bw())
dir <- 'input/'
teams <- fread('input/Teams.csv',sep=',')
seasons <- fread('input/Seasons.csv',sep=',')
seeds <- fread('input/NCAATourneySeeds.csv',sep=',')
seas_results <- fread('input/RegularSeasonCompactResults.csv',sep=',')
tour_results <- fread('input/NCAATourneyCompactResults.csv',sep=',')
seas_detail <- fread('input/RegularSeasonDetailedResults.csv',sep=',')
tour_detail <- fread('input/NCAATourneyDetailedResults.csv',sep=',')
conferences <- fread('input/Conferences.csv',sep=',')
team_conferences <- fread('input/TeamConferences.csv',sep=',')
coaches <- fread('input/TeamCoaches.csv',sep=',')
tour_enrich <- fread('input/NCAATourneyDetailedResultsEnriched.csv',sep=',')
seas_enrich <- fread('input/NCAASeasonDetailedResultsEnrichedv2.csv',sep=',')
setkey(teams, TeamID)
setkey(seeds, TeamID)
g1 <-
teams[seeds][, one_seed := as.numeric(substr(Seed, 2, 3)) == 1][, sum(one_seed), by = TeamName][order(V1, decreasing = T)][1:15,] %>%
ggplot(aes(x = reorder(TeamName, V1), y = V1)) +
geom_bar(stat = 'identity', fill = 'darkblue') +
labs(x = '', y = 'No 1 seeds', title = 'No. 1 Seeds since 1985') +
coord_flip()
setkey(seas_results, WTeamID)
g2 <-
seas_results[teams][, .(wins = .N), by = TeamName][order(-wins)][1:15,] %>%
ggplot(aes(x = reorder(TeamName, wins), y = wins)) +
geom_bar(stat = 'identity', fill = 'darkblue') +
labs(x = '', y = 'Wins', title = 'Regular Season Wins since 1985') +
coord_flip()
setkey(tour_results, WTeamID)
g3 <-
tour_results[teams][, .(wins = .N), by = TeamName][order(-wins)][1:15,] %>%
ggplot(aes(x = reorder(TeamName, wins), y = wins)) +
geom_bar(stat = 'identity', fill = 'darkblue') +
labs(x = '', y = 'Wins', title = 'Tournament Wins since 1985') +
coord_flip()
g4 <-
tour_results[teams][DayNum == 154, .(wins = .N), by = TeamName][order(-wins)][1:15,] %>%
ggplot(aes(x = reorder(TeamName, wins), y = wins)) +
geom_bar(stat = 'identity', fill = 'darkblue') +
labs(x = '', y = 'Championships', title = 'Tournament Championships since 1985') +
coord_flip()
grid.arrange(g1, g2, g3, g4, nrow = 2)
head(teams)
head(seeds)
head(seeds)
setkey(teams, TeamID)
setkey(seeds, TeamID)
g1 <-
teams[seeds][, one_seed := as.numeric(substr(Seed, 2, 3)) == 1][, sum(one_seed), by = TeamName][order(V1, decreasing = T)][1:15,] %>%
ggplot(aes(x = reorder(TeamName, V1), y = V1)) +
geom_bar(stat = 'identity', fill = 'darkblue') +
labs(x = '', y = 'No 1 seeds', title = 'No. 1 Seeds since 1985') +
coord_flip()
setkey(seas_results, WTeamID)
g2 <-
seas_results[teams][, .(wins = .N), by = TeamName][order(-wins)][1:15,] %>%
ggplot(aes(x = reorder(TeamName, wins), y = wins)) +
geom_bar(stat = 'identity', fill = 'darkblue') +
labs(x = '', y = 'Wins', title = 'Regular Season Wins since 1985') +
coord_flip()
setkey(tour_results, WTeamID)
g3 <-
tour_results[teams][, .(wins = .N), by = TeamName][order(-wins)][1:15,] %>%
ggplot(aes(x = reorder(TeamName, wins), y = wins)) +
geom_bar(stat = 'identity', fill = 'darkblue') +
labs(x = '', y = 'Wins', title = 'Tournament Wins since 1985') +
coord_flip()
g4 <-
tour_results[teams][DayNum == 154, .(wins = .N), by = TeamName][order(-wins)][1:15,] %>%
ggplot(aes(x = reorder(TeamName, wins), y = wins)) +
geom_bar(stat = 'identity', fill = 'darkblue') +
labs(x = '', y = 'Championships', title = 'Tournament Championships since 1985') +
coord_flip()
grid.arrange(g1, g2, g3, g4, nrow = 2)
win_stats <- seas_enrich[, .(
Season,
TeamID = WTeamID,
Result = rep('W', .N),
FGM = WFGM,
FGA = WFGA,
FGP = WFGM / WFGA,
FGP2 = (WFGM - WFGM3) / (WFGA - WFGA3),
FGM3 = WFGM3,
FGA3 = WFGA3,
FGP3 = WFGM3 / WFGA3,
FTM = WFTM,
FTA = WFTA,
FTP = WFTM / WFTA,
OR = WOR,
DR = WDR,
AST = WAst,
TO = WTO,
STL = WStl,
BLK = WBlk,
PF = WPF,
PIE = WPIE,
ORP = WOR / (WOR + LDR),
DRP = WDR / (WDR + LOR),
eFG = WeFGP,
NetRTG = WNetRtg,
POS = 0.96 * (WFGA + WTO + 0.44 * WFTA - WOR)
)]
win_stats <- seas_enrich[, .(
Season,
TeamID = WTeamID,
Result = rep('W', .N),
FGM = WFGM,
FGA = WFGA,
FGP = WFGM / WFGA,
FGP2 = (WFGM - WFGM3) / (WFGA - WFGA3),
FGM3 = WFGM3,
FGA3 = WFGA3,
FGP3 = WFGM3 / WFGA3,
FTM = WFTM,
FTA = WFTA,
FTP = WFTM / WFTA,
OR = WOR,
DR = WDR,
AST = WAst,
TO = WTO,
STL = WStl,
BLK = WBlk,
PF = WPF,
PIE = WPIE,
ORP = WOR / (WOR + LDR),
DRP = WDR / (WDR + LOR),
eFG = WeFGP,
NetRTG = WNetRtg,
POS = 0.96 * (WFGA + WTO + 0.44 * WFTA - WOR)
)]
wins_s <- seas_results[, .(rsW = .N), by = c('WTeamID', 'Season')]
wins_t <- tour_results[!(DayNum %in% c(134, 135)), .(tW = .N), by = c('WTeamID', 'Season')]
wins_teams <- wins_s[wins_t][teams]
wins_teams[!is.na(Season), ] %>%
ggplot(aes(x = rsW, y = tW)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap( ~ as.factor(Season)) +
labs(
x = 'Regular season wins',
y = 'Tournament wins',
title = 'Tournament Wins by Regular Season Wins')
wins <- seas_results[, .(n_games = .N, sum_score = sum(WScore)), by = c('WTeamID', 'Season')]
losses <- seas_results[, .(n_games = .N, sum_score = sum(LScore)), by = c('LTeamID', 'Season')]
all_games <- rbindlist(list(wins, losses))
all_games <- all_games[, .(rs_ppg = sum(sum_score) / sum(n_games)), by = c('WTeamID', 'Season')]
all_games[wins_t, on = c('WTeamID', 'Season')] %>%
ggplot(aes(x = rs_ppg, y = tW)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap( ~ as.factor(Season)) +
labs(
x = 'Regular season average score',
y = 'Tournament wins',
title = 'Tournament Wins by Regular Season Point per Game')
